@model iAFWebHost.Models.LoginViewModel

@{
    ViewBag.Title = "Existing account login";
}

<h2 style="color:#fff">@ViewBag.Title</h2>
<div class="row">
    <div class="col-md-4">
        <div class="pop-unit">
            <section id="loginForm">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <h4>Enter account info to log in.</h4>
                    @Html.ValidationSummary(true)
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @placeholder = "Enter username" })
                            @Html.ValidationMessageFor(m => m.UserName)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Enter password" })
                            @Html.ValidationMessageFor(m => m.Password)
                            @Html.HiddenFor(m => m.RememberMe)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            <input type="submit" value="Log in" class="btn btn-success" />
                        </div>
                    </div>
                    <p>
                        @Html.ActionLink("Register", "Register") if you don't have a local account.
                    </p>
                }
            </section>
        </div>
    </div>
    <div class="col-md-8">
        <div class="pop-unit">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new { Action = "ExternalLogin", ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}